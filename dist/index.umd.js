!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("fs"),require("path"),require("os"),require("playwright-core"),require("https"),require("node-stream-zip")):"function"==typeof define&&define.amd?define(["exports","fs","path","os","playwright-core","https","node-stream-zip"],e):e((t||self).dappwright={},t.fs,t.path,t.os,t.playwrightCore,t.https,t.nodeStreamZip)}(this,function(t,e,a,i,n,o,s){function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function c(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach(function(a){if("default"!==a){var i=Object.getOwnPropertyDescriptor(t,a);Object.defineProperty(e,a,i.get?i:{enumerable:!0,get:function(){return t[a]}})}}),e.default=t,e}var l=/*#__PURE__*/c(e),w=/*#__PURE__*/r(e),d=/*#__PURE__*/c(a),p=/*#__PURE__*/c(i),g=/*#__PURE__*/r(i),u=/*#__PURE__*/r(n),y=/*#__PURE__*/r(s);const m=(t,e)=>async(a,i=e)=>{for(const e of i)await e(t,a)},h=(t,e)=>{if(t===e)return!1;const a=t.replace(/[^\d.-]/g,"").split("."),i=e.replace(/[^\d.-]/g,"").split("."),n=a.length>i.length?a.length:i.length;for(let t=0;t<n;t++)if((Number(a[t])||0)!==(Number(i[t])||0))return(Number(i[t])||0)>(Number(a[t])||0);return!0},k=t=>0===l.readdirSync(t,{withFileTypes:!0}).filter(t=>t.isFile()&&!t.name.startsWith(".")).length;var f=(t,e,a)=>async i=>{let n;const{version:o}=i;return o?(console.log(""),"latest"===o?console.warn("[33m%s[0m",`It is not recommended to run ${t} with "latest" version. Use it at your own risk or set to the recommended version "${a}".`):h(a,o)?console.warn("[33m%s[0m",`Seems you are running a newer version (${o}) of ${t} than recommended by the Dappwright team.\n      Use it at your own risk or set to the recommended version "${a}".`):h(o,a)?console.warn("[33m%s[0m",`Seems you are running an older version (${o}) of ${t} than recommended by the Dappwright team.\n      Use it at your own risk or set the recommended version "${a}".`):console.log(`Running tests on ${t} version ${o}`),console.log(""),n=await T(o,e,b(t))):console.log(`Running tests on local ${t} build`),n};const b=t=>d.resolve(p.tmpdir(),"dappwright",t),T=async(t,e,a)=>{const i=d.resolve(a,t.replace(/\./g,"_"));if("latest"!==t&&l.existsSync(i)&&!k(i))return i;console.log("Downloading extension...");const{filename:n,downloadUrl:o}=await v(e,`v${t}`);if(l.existsSync(i)&&k(i)&&l.rmdirSync(i,{recursive:!0}),!l.existsSync(i)||k(i)){const t=await S(n,o,a),e=new y.default.async({file:t});l.mkdirSync(i),await e.extract(null,i);const s=d.resolve(i,"manifest.json"),r=JSON.parse(l.readFileSync(s,"utf-8"));r.key="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnpiOcYGaEp02v5On5luCk/4g9j+ujgWeGlpZVibaSz6kUlyiZvcVNIIUXR568uv5NrEi5+j9+HbzshLALhCn9S43E7Ha6Xkdxs3kOEPBu8FRNwFh2S7ivVr6ixnl2FCGwfkP1S1r7k665eC1/xYdJKGCc8UByfSw24Rtl5odUqZX1SaE6CsQEMymCFcWhpE3fV+LZ6RWWJ63Zm1ac5KmKzXdj7wZzN3onI0Csc8riBZ0AujkThJmCR8tZt2PkVUDX9exa0XkJb79pe0Ken5Bt2jylJhmQB7R3N1pVNhNQt17Sytnwz6zG2YsB2XNd/1VYJe52cPNJc7zvhQJpHjh5QIDAQAB",l.writeFileSync(s,JSON.stringify(r))}return i},S=(t,e,a)=>new Promise(async i=>{l.existsSync(a)||l.mkdirSync(a,{recursive:!0});const n=d.join(a,t),s=l.createWriteStream(n),r=await(t=>new Promise(e=>{o.get(t,t=>{302==t.statusCode?o.get(t.headers.location,e).on("error",t=>{throw console.warn("request redirected error:",t.message),t}):e(t)}).on("error",t=>{throw console.warn("request error:",t.message),t})}))(e);r.pipe(s),r.on("end",()=>{i(n)})}),v=(t,e)=>new Promise((a,i)=>{const n={headers:{"User-Agent":"Mozilla/5.0"}};process.env.GITHUB_TOKEN&&(n.headers.Authorization=`Bearer ${process.env.GITHUB_TOKEN}`),o.get(t,n,t=>{let n="";t.on("data",t=>{n+=t}),t.on("end",()=>{const t=JSON.parse(n);if(t.message)return i(t.message);for(const i of t)if(!i.draft&&("latest"===e||i.name.includes(e)||i.tag_name.includes(e)))for(const t of i.assets)t.name.includes("chrome")&&a({downloadUrl:t.browser_download_url,filename:t.name,tag:i.tag_name});i(`Version ${e} not found!`)})}).on("error",t=>{throw console.warn("getGithubRelease error:",t.message),t})});class B{version;page;constructor(t){this.page=t}static id;static recommendedVersion;static releasesUrl;static homePath;static download}const I=async t=>{await t.waitForTimeout(3e3)},F=async(t,e,a)=>{const i=await N(t,e,a);await i.click()},x=async(t,e)=>{const a=await N(t,e,"button");await a.click()},$=async(t,e,a,i=!1,n=!1,o=!1)=>{let s;try{s=await C(t,e,n,5e3)}catch(t){if(o)return!1;throw t}return i&&await t.evaluate(t=>{t.value=""},s),await s.type(a),!0},N=(t,e,a="*")=>t.waitForSelector(`//${a}[contains(text(), '${e}')]`),C=(t,e,a=!1,i=2e3)=>t.waitForSelector([`//label[contains(.,'${e}')]/following-sibling::textarea`,`//label[contains(.,'${e}')]/following-sibling::*//input`,`//h6[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::input`,`//h6[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::*//input`,...a?[]:[`//span[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::*//input`,`//span[contains(.,'${e}')]/following-sibling::*//input`]].join("|"),{timeout:i}),A=async(t,e)=>{const a=await E(t,e);await a.click()},_=async t=>{const e=await t.waitForSelector(".network-display");await e.click(),await t.waitForSelector("li.dropdown-menu-item")},j=async t=>{const e=await t.waitForSelector(".account-menu__icon");await e.click({noWaitAfter:!0,force:!0})},P=async t=>{const e=await t.waitForSelector(".app-header__logo-container");await e.click()},E=(t,e)=>t.waitForSelector([`//span[contains(.,'${e}')]/parent::div/following-sibling::div/div/div/div`,`//span[contains(.,'${e}')]/parent::div/following-sibling::div/div/label/div`].join("|")),U=async t=>{const e={timeout:1e3},a=await Promise.race([t.waitForSelector("span.error",e),t.waitForSelector(".typography--color-error-1",e),t.waitForSelector(".typography--color-error-default",e),t.waitForSelector(".form-field__input--error",e)]).catch(()=>null);return!!a&&a.innerText},V=async(t,e)=>{const a=await t.context().waitForEvent("page");await e(a),a.isClosed()||await a.waitForEvent("close")},L=t=>async e=>{await t.bringToFront(),await t.waitForTimeout(500),await j(t),await F(t,`Account ${e}`)};async function q(t){await _(t),await F(t,"Show/hide"),await A(t,"Advanced gas controls"),await A(t,"Show test networks"),await P(t),await I(t)}async function R(t,{seed:e="already turtle birth enroll since owner keep patch skirt drift any dinner"}){await t.getByTestId("onboarding-import-wallet").click(),await t.getByTestId("metametrics-i-agree").click();for(const[a,i]of e.split(" ").entries())await $(t,`${a+1}.`,i);await t.getByTestId("import-srp-confirm").click()}async function O(t,{password:e="password1234"}){await t.getByTestId("create-password-new").fill(e),await t.getByTestId("create-password-confirm").fill(e),await t.getByTestId("create-password-terms").click(),await t.getByTestId("create-password-import").click()}async function z(t){await t.getByTestId("onboarding-complete-done").click(),await t.getByTestId("pin-extension-next").click(),await t.getByTestId("pin-extension-done").click()}const G=async t=>{await new Promise(t=>setTimeout(t,1e3)),await t.locator(".popover-header__button").isVisible()&&await t.$eval(".popover-header__button",t=>t.click())},W=async t=>{await t.getByTestId("portfolio-navigation-link").click()},J=async t=>{await t.goto(t.url().split("?")[0])};async function K(t,{seed:e="already turtle birth enroll since owner keep patch skirt drift any dinner",password:a="password1234!!!!"}){await t.getByTestId("btn-import-existing-wallet").click(),await t.getByTestId("btn-import-recovery-phrase").click(),await t.getByTestId("seed-phrase-input").fill(e),await t.getByTestId("btn-import-wallet").click(),await t.getByTestId("setPassword").fill(a),await t.getByTestId("setPasswordVerify").fill(a),await t.getByTestId("terms-and-privacy-policy").check(),await t.getByTestId("btn-password-continue").click(),await I(t)}const D=async t=>{console.warn("deleteAccount not implemented - Coinbase does not support importing/removing additional private keys")},Q=async t=>{console.warn("addToken not implemented - Coinbase does not support adding custom tokens")},Z=async t=>{console.warn("importPK not implemented - Coinbase does not support importing/removing private keys")},M=async t=>{console.warn("switchNetwork not implemented")},X=async()=>{console.warn("confirmNetorkSwitch not implemented")};class H extends B{static id="coinbase";static recommendedVersion="3.6.0";static releasesUrl="https://api.github.com/repos/TenKeyLabs/coinbase-wallet-archive/releases";static homePath="/index.html";options;static download=f(this.id,this.releasesUrl,this.recommendedVersion);defaultSetupSteps=[K,J];setup=m(this.page,this.defaultSetupSteps);addNetwork=(t=>async e=>{const a=await t.context().newPage();let i;await a.goto(`${t.url()}?internalPopUpRequest=true&action=addCustomNetwork`),await a.getByTestId("custom-network-name-input").fill(e.networkName),await a.getByTestId("custom-network-rpc-url-input").fill(e.rpc),await a.getByTestId("custom-network-chain-id-input").fill(e.chainId.toString()),await a.getByTestId("custom-network-currency-symbol-input").fill(e.symbol),await a.getByTestId("custom-network-save").click();try{i=await a.waitForSelector('//span[@data-testid="text-input-error-label"]',{timeout:50})}catch{}if(i){const t=await i.textContent();throw await a.close(),new SyntaxError(t)}await a.waitForEvent("close"),await t.bringToFront(),await t.reload()})(this.page);addToken=Q;approve=(t=>async()=>{await V(t,async t=>{await t.getByTestId("allow-authorize-button").click()})})(this.page);createAccount=(t=>async()=>{await t.getByTestId("portfolio-header--switcher-cell-pressable").click(),await t.getByTestId("wallet-switcher--manage").click(),await t.getByTestId("manage-wallets-account-item--action-cell-pressable").click();try{await t.getByTestId("add-new-wallet--continue").click()}catch{}await I(t)})(this.page);confirmNetworkSwitch=X;confirmTransaction=(t=>async()=>{await V(t,async t=>{try{await(await t.waitForSelector("text='Got it'",{timeout:1e3})).click()}catch{}await t.getByTestId("request-confirm-button").click()})})(this.page);deleteAccount=D;deleteNetwork=(t=>async e=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("settings-networks-menu-cell-pressable").click(),await t.getByTestId("network-list-search").fill(e),await(await t.waitForSelector('//div[@data-testid="list-"][1]//button')).click(),await t.getByTestId("custom-network-delete").click(),await W(t)})(this.page);getTokenBalance=(t=>async e=>{const a=[async()=>(await t.bringToFront(),await t.getByTestId("portfolio-selector-nav-tabLabel--crypto").click(),await t.waitForSelector(`//button[contains(@data-testid, "asset-item")][contains(@data-testid, "${e}")]`,{timeout:500})),async()=>(await t.getByTestId("portfolio-selector-nav-tabLabel--testnet").click(),await t.waitForSelector(`//button[contains(@data-testid, "asset-item")][contains(@data-testid, "${e}")]`,{timeout:500}))];let i;for(const t of a)try{i=await t()}catch{}if(!i)return 0;const n=(await i.textContent()).replaceAll(/ |,/g,"").split(e)[2];return n?Number(n):0})(this.page);hasNetwork=(t=>async e=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("settings-networks-menu-cell-pressable").click(),await t.getByTestId("network-list-search").fill(e);const a=await t.isVisible('//div[@data-testid="list-"][1]//button');return await W(t),a})(this.page);importPK=Z;lock=(t=>async()=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("lock-wallet-button").click()})(this.page);sign=(t=>async()=>{await V(t,async t=>{await t.getByTestId("sign-message").click()})})(this.page);switchAccount=(t=>async e=>{await t.getByTestId("portfolio-header--switcher-cell-pressable").click(),await(await t.waitForSelector(`(//button[@data-testid="wallet-switcher--wallet-item-cell-pressable"])[${e}]`)).click()})(this.page);switchNetwork=M;unlock=(t=>async(e="password1234!!!!")=>{await t.getByTestId("unlock-with-password").fill(e),await t.getByTestId("unlock-wallet-button").click(),await W(t),await t.waitForSelector("//div[@data-testid='asset-list']//*[not(text='')]",{timeout:1e4})})(this.page)}class Y extends B{static id="metamask";static recommendedVersion="10.25.0";static releasesUrl="https://api.github.com/repos/metamask/metamask-extension/releases";static homePath="/home.html";options;static download=f(this.id,this.releasesUrl,this.recommendedVersion);defaultSetupSteps=[R,O,z,G,q];setup=m(this.page,this.defaultSetupSteps);addNetwork=(t=>async({networkName:e,rpc:a,chainId:i,symbol:n})=>{await t.bringToFront(),await _(t),await x(t,"Add network"),await t.getByTestId("network-display").click(),await t.getByRole("button",{name:"Add network"}).click(),await t.getByTestId("add-network-manually").click(),await t.getByLabel("Network name").fill(e),await t.getByLabel("New RPC URL").fill(a),await t.getByLabel("Chain ID").fill(String(i)),await t.getByLabel("Currency symbol").fill(n);const o=await U(t);if(o)throw await P(t),new SyntaxError(o);await x(t,"Save"),await t.waitForSelector(`//*[text() = '${e}']`),await t.isVisible("//button[contains(text(), 'Got it')]")&&await x(t,"Got it")})(this.page);addToken=(t=>async({tokenAddress:e,symbol:a,decimals:i=0})=>{await t.bringToFront(),await F(t,"Import tokens"),await t.waitForTimeout(500),await x(t,"Custom token"),await $(t,"Token contract address",e),a&&await $(t,"Token symbol",a,!0);const n=await C(t,"Token decimal");await n.isDisabled()||await n.type(String(i)),await x(t,"Add custom token"),await x(t,"Import tokens")})(this.page);approve=(t=>async()=>{await V(t,async e=>{await e.waitForLoadState(),await e.bringToFront(),await e.locator('input[type="checkbox"]').first().check(),await x(e,"Next"),await x(e,"Connect"),await I(t),await e.close()})})(this.page);createAccount=(t=>async()=>{await t.bringToFront(),await j(t),await F(t,"Create account"),await x(t,"Create"),await I(t)})(this.page);confirmNetworkSwitch=(t=>async()=>{await V(t,async e=>{await x(e,"Switch network"),await I(t)})})(this.page);confirmTransaction=(t=>async e=>{await V(t,async t=>{e&&(await t.getByTestId("edit-gas-fee-button").click(),await t.getByTestId("edit-gas-fee-item-custom").click(),e.gas&&await t.getByTestId("base-fee-input").fill(String(e.gas)),e.priority&&await t.getByTestId("priority-fee-input").fill(String(e.priority)),e.gasLimit&&(await t.getByTestId("advanced-gas-fee-edit").click(),await t.getByTestId("gas-limit-input").fill(String(e.gasLimit))),await t.getByRole("button",{name:"Save"}).click()),await t.getByTestId("page-container-footer-next").click()})})(this.page);deleteAccount=(t=>async e=>{if(await t.bringToFront(),1===e)throw new SyntaxError("Account 1 cannot be deleted");await L(t)(e),await(async t=>{const e=await(t=>t.waitForSelector("button.menu-bar__account-options"))(t);await e.click(),await t.waitForSelector(".menu__container.account-options-menu")})(t),await F(t,"Remove account"),await x(t,"Remove"),await I(t)})(this.page);deleteNetwork=(t=>async e=>{await t.bringToFront(),await _(t);const a=await N(t,e);await a.hover();const i=await t.waitForSelector(`//*[contains(text(), '${e}')]/following-sibling::i`);await i.click(),await x(t,"Delete"),await P(t)})(this.page);getTokenBalance=(t=>async e=>{await t.bringToFront(),await t.waitForTimeout(1e3);const a=await t.$$(".asset-list-item__token-button");for(let i=0;i<a.length;i++){const n=a[i],o=await t.evaluate(t=>t.getAttribute("title"),n);if(o.split(" ")[1].toUpperCase()===e.toUpperCase()){const t=o.split(" ")[0];return parseFloat(t)}}return 0})(this.page);hasNetwork=(t=>async e=>{await t.bringToFront(),await _(t);const a=await t.isVisible(`//div[@class="network-dropdown-list"]/li[contains(string(), "${e}")]`);return(await t.waitForSelector(".network-display")).click(),a})(this.page);importPK=(t=>async e=>{await t.bringToFront(),await j(t),await F(t,"Import account"),await $(t,"your private key",e),await x(t,"Import");const a=await U(t);if(a)throw new SyntaxError(a)})(this.page);lock=(t=>async()=>{await t.bringToFront(),await j(t),await x(t,"Lock")})(this.page);sign=(t=>async()=>{await V(t,async t=>{await t.bringToFront(),await t.reload(),await t.waitForSelector("div");let e=await t.locator(".signature-request-message__scroll-button");await e.count(),await e.count()>=1&&await t.click(".signature-request-message__scroll-button"),await x(t,"Sign")})})(this.page);switchAccount=L(this.page);switchNetwork=(t=>async(e="main")=>{await t.bringToFront(),await _(t),await t.waitForSelector(":nth-match(li.dropdown-menu-item, 2)");const a=await t.evaluate(t=>{const e=document.querySelectorAll("li.dropdown-menu-item");for(let a=0;a<e.length;a++)if(e[a].innerText.toLowerCase().includes(t.toLowerCase()))return a;return 0},e),i=await t.evaluate(t=>document.querySelectorAll("li.dropdown-menu-item > span")[t].innerText,a),n=(await t.$$("li.dropdown-menu-item"))[a];await n.click(),await t.waitForSelector(`//*[text() = '${i}']`)})(this.page);unlock=(t=>async(e="password1234")=>{await t.bringToFront(),await t.getByTestId("unlock-password").fill(e),await t.getByTestId("unlock-submit").click(),await G(t)})(this.page)}const tt=[H,Y],et=t=>{const e=tt.find(e=>e.id===t);if(!e)throw new Error(`Wallet ${t} not supported`);return e},at=async(t,e)=>{const a=et(t);if(1===e.pages().length){let t;try{return t=await e.waitForEvent("page",{timeout:2e3}),new a(t)}catch{t=await e.newPage(),await t.goto(`chrome-extension://gadekpdjmpjjnnemgnhkbjgnjpdaakgh${a.homePath}`)}return new a(t)}return new a(e.pages()[1])},it=d.resolve(g.default.tmpdir(),"dappwright","session");async function nt(t,e){const{headless:a,...i}=e,n=et(i.wallet);if(!n)throw new Error("Wallet not supported");const o=await n.download(i),s=await u.default.chromium.launchPersistentContext(d.join(it,i.wallet),{headless:a??!1,args:[`--disable-extensions-except=${o}`,`--load-extension=${o}`]});return{wallet:await at(n.id,s),browserContext:s}}t.CoinbaseWallet=H,t.MetaMaskWallet=Y,t.bootstrap=async(t,{seed:e,password:a,showTestNets:i,...n})=>{w.default.existsSync(d.join(it,n.wallet))&&w.default.rmdirSync(d.join(it,n.wallet),{recursive:!0});const{browserContext:o}=await nt(0,n);try{const t=await at(n.wallet,o);return await t.setup({seed:e,password:a,showTestNets:i}),[t,t.page,o]}catch(t){throw await o.close(),t}},t.getWallet=at,t.launch=nt,t.sessionPath=it,t.setup=m});
//# sourceMappingURL=index.umd.js.map
