import*as t from"fs";import e from"fs";import*as a from"path";import*as i from"os";import o from"os";import n from"playwright-core";import{get as s}from"https";import r from"node-stream-zip";const c=(t,e)=>async(a,i=e)=>{for(const e of i)await e(t,a)},l=(t,e)=>{if(t===e)return!1;const a=t.replace(/[^\d.-]/g,"").split("."),i=e.replace(/[^\d.-]/g,"").split("."),o=a.length>i.length?a.length:i.length;for(let t=0;t<o;t++)if((Number(a[t])||0)!==(Number(i[t])||0))return(Number(i[t])||0)>(Number(a[t])||0);return!0},w=e=>0===t.readdirSync(e,{withFileTypes:!0}).filter(t=>t.isFile()&&!t.name.startsWith(".")).length;var d=(t,e,a)=>async i=>{let o;const{version:n}=i;return n?(console.log(""),"latest"===n?console.warn("[33m%s[0m",`It is not recommended to run ${t} with "latest" version. Use it at your own risk or set to the recommended version "${a}".`):l(a,n)?console.warn("[33m%s[0m",`Seems you are running a newer version (${n}) of ${t} than recommended by the Dappwright team.\n      Use it at your own risk or set to the recommended version "${a}".`):l(n,a)?console.warn("[33m%s[0m",`Seems you are running an older version (${n}) of ${t} than recommended by the Dappwright team.\n      Use it at your own risk or set the recommended version "${a}".`):console.log(`Running tests on ${t} version ${n}`),console.log(""),o=await g(n,e,p(t))):console.log(`Running tests on local ${t} build`),o};const p=t=>a.resolve(i.tmpdir(),"dappwright",t),g=async(e,i,o)=>{const n=a.resolve(o,e.replace(/\./g,"_"));if("latest"!==e&&t.existsSync(n)&&!w(n))return n;console.log("Downloading extension...");const{filename:s,downloadUrl:c}=await u(i,`v${e}`);if(t.existsSync(n)&&w(n)&&t.rmdirSync(n,{recursive:!0}),!t.existsSync(n)||w(n)){const e=await m(s,c,o),i=new r.async({file:e});t.mkdirSync(n),await i.extract(null,n);const l=a.resolve(n,"manifest.json"),w=JSON.parse(t.readFileSync(l,"utf-8"));w.key="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnpiOcYGaEp02v5On5luCk/4g9j+ujgWeGlpZVibaSz6kUlyiZvcVNIIUXR568uv5NrEi5+j9+HbzshLALhCn9S43E7Ha6Xkdxs3kOEPBu8FRNwFh2S7ivVr6ixnl2FCGwfkP1S1r7k665eC1/xYdJKGCc8UByfSw24Rtl5odUqZX1SaE6CsQEMymCFcWhpE3fV+LZ6RWWJ63Zm1ac5KmKzXdj7wZzN3onI0Csc8riBZ0AujkThJmCR8tZt2PkVUDX9exa0XkJb79pe0Ken5Bt2jylJhmQB7R3N1pVNhNQt17Sytnwz6zG2YsB2XNd/1VYJe52cPNJc7zvhQJpHjh5QIDAQAB",t.writeFileSync(l,JSON.stringify(w))}return n},m=(e,i,o)=>new Promise(async n=>{t.existsSync(o)||t.mkdirSync(o,{recursive:!0});const r=a.join(o,e),c=t.createWriteStream(r),l=await(t=>new Promise(e=>{s(t,t=>{302==t.statusCode?s(t.headers.location,e).on("error",t=>{throw console.warn("request redirected error:",t.message),t}):e(t)}).on("error",t=>{throw console.warn("request error:",t.message),t})}))(i);l.pipe(c),l.on("end",()=>{n(r)})}),u=(t,e)=>new Promise((a,i)=>{const o={headers:{"User-Agent":"Mozilla/5.0"}};process.env.GITHUB_TOKEN&&(o.headers.Authorization=`Bearer ${process.env.GITHUB_TOKEN}`),s(t,o,t=>{let o="";t.on("data",t=>{o+=t}),t.on("end",()=>{const t=JSON.parse(o);if(t.message)return i(t.message);for(const i of t)if(!i.draft&&("latest"===e||i.name.includes(e)||i.tag_name.includes(e)))for(const t of i.assets)t.name.includes("chrome")&&a({downloadUrl:t.browser_download_url,filename:t.name,tag:i.tag_name});i(`Version ${e} not found!`)})}).on("error",t=>{throw console.warn("getGithubRelease error:",t.message),t})});class y{version;page;constructor(t){this.page=t}static id;static recommendedVersion;static releasesUrl;static homePath;static download}const h=async t=>{await t.waitForTimeout(3e3)},k=async(t,e,a)=>{const i=await T(t,e,a);await i.click()},f=async(t,e)=>{const a=await T(t,e,"button");await a.click()},b=async(t,e,a,i=!1,o=!1,n=!1)=>{let s;try{s=await S(t,e,o,5e3)}catch(t){if(n)return!1;throw t}return i&&await t.evaluate(t=>{t.value=""},s),await s.type(a),!0},T=(t,e,a="*")=>t.waitForSelector(`//${a}[contains(text(), '${e}')]`),S=(t,e,a=!1,i=2e3)=>t.waitForSelector([`//label[contains(.,'${e}')]/following-sibling::textarea`,`//label[contains(.,'${e}')]/following-sibling::*//input`,`//h6[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::input`,`//h6[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::*//input`,...a?[]:[`//span[contains(.,'${e}')]/parent::node()/parent::node()/following-sibling::*//input`,`//span[contains(.,'${e}')]/following-sibling::*//input`]].join("|"),{timeout:i}),B=async(t,e)=>{const a=await x(t,e);await a.click()},v=async t=>{const e=await t.waitForSelector(".network-display");await e.click(),await t.waitForSelector("li.dropdown-menu-item")},I=async t=>{const e=await t.waitForSelector(".account-menu__icon");await e.click({noWaitAfter:!0,force:!0})},F=async t=>{const e=await t.waitForSelector(".app-header__logo-container");await e.click()},x=(t,e)=>t.waitForSelector([`//span[contains(.,'${e}')]/parent::div/following-sibling::div/div/div/div`,`//span[contains(.,'${e}')]/parent::div/following-sibling::div/div/label/div`].join("|")),$=async t=>{const e={timeout:1e3},a=await Promise.race([t.waitForSelector("span.error",e),t.waitForSelector(".typography--color-error-1",e),t.waitForSelector(".typography--color-error-default",e),t.waitForSelector(".form-field__input--error",e)]).catch(()=>null);return!!a&&a.innerText},N=async(t,e)=>{const a=await t.context().waitForEvent("page");await e(a),a.isClosed()||await a.waitForEvent("close")},C=t=>async e=>{await t.bringToFront(),await t.waitForTimeout(500),await I(t),await k(t,`Account ${e}`)};async function A(t){await v(t),await k(t,"Show/hide"),await B(t,"Advanced gas controls"),await B(t,"Show test networks"),await F(t),await h(t)}async function _(t,{seed:e="already turtle birth enroll since owner keep patch skirt drift any dinner"}){await t.getByTestId("onboarding-import-wallet").click(),await t.getByTestId("metametrics-i-agree").click();for(const[a,i]of e.split(" ").entries())await b(t,`${a+1}.`,i);await t.getByTestId("import-srp-confirm").click()}async function P(t,{password:e="password1234"}){await t.getByTestId("create-password-new").fill(e),await t.getByTestId("create-password-confirm").fill(e),await t.getByTestId("create-password-terms").click(),await t.getByTestId("create-password-import").click()}async function U(t){await t.getByTestId("onboarding-complete-done").click(),await t.getByTestId("pin-extension-next").click(),await t.getByTestId("pin-extension-done").click()}const E=async t=>{await new Promise(t=>setTimeout(t,1e3)),await t.locator(".popover-header__button").isVisible()&&await t.$eval(".popover-header__button",t=>t.click())},j=async t=>{await t.getByTestId("portfolio-navigation-link").click()},V=async t=>{await t.goto(t.url().split("?")[0])};async function L(t,{seed:e="already turtle birth enroll since owner keep patch skirt drift any dinner",password:a="password1234!!!!"}){await t.getByTestId("btn-import-existing-wallet").click(),await t.getByTestId("btn-import-recovery-phrase").click(),await t.getByTestId("seed-phrase-input").fill(e),await t.getByTestId("btn-import-wallet").click(),await t.getByTestId("setPassword").fill(a),await t.getByTestId("setPasswordVerify").fill(a),await t.getByTestId("terms-and-privacy-policy").check(),await t.getByTestId("btn-password-continue").click(),await h(t)}const R=async t=>{console.warn("deleteAccount not implemented - Coinbase does not support importing/removing additional private keys")},G=async t=>{console.warn("addToken not implemented - Coinbase does not support adding custom tokens")},z=async t=>{console.warn("importPK not implemented - Coinbase does not support importing/removing private keys")},J=async t=>{console.warn("switchNetwork not implemented")},K=async()=>{console.warn("confirmNetorkSwitch not implemented")};class q extends y{static id="coinbase";static recommendedVersion="3.6.0";static releasesUrl="https://api.github.com/repos/TenKeyLabs/coinbase-wallet-archive/releases";static homePath="/index.html";options;static download=d(this.id,this.releasesUrl,this.recommendedVersion);defaultSetupSteps=[L,V];setup=c(this.page,this.defaultSetupSteps);addNetwork=(t=>async e=>{const a=await t.context().newPage();let i;await a.goto(`${t.url()}?internalPopUpRequest=true&action=addCustomNetwork`),await a.getByTestId("custom-network-name-input").fill(e.networkName),await a.getByTestId("custom-network-rpc-url-input").fill(e.rpc),await a.getByTestId("custom-network-chain-id-input").fill(e.chainId.toString()),await a.getByTestId("custom-network-currency-symbol-input").fill(e.symbol),await a.getByTestId("custom-network-save").click();try{i=await a.waitForSelector('//span[@data-testid="text-input-error-label"]',{timeout:50})}catch{}if(i){const t=await i.textContent();throw await a.close(),new SyntaxError(t)}await a.waitForEvent("close"),await t.bringToFront(),await t.reload()})(this.page);addToken=G;approve=(t=>async()=>{await N(t,async t=>{await t.getByTestId("allow-authorize-button").click()})})(this.page);createAccount=(t=>async()=>{await t.getByTestId("portfolio-header--switcher-cell-pressable").click(),await t.getByTestId("wallet-switcher--manage").click(),await t.getByTestId("manage-wallets-account-item--action-cell-pressable").click();try{await t.getByTestId("add-new-wallet--continue").click()}catch{}await h(t)})(this.page);confirmNetworkSwitch=K;confirmTransaction=(t=>async()=>{await N(t,async t=>{try{await(await t.waitForSelector("text='Got it'",{timeout:1e3})).click()}catch{}await t.getByTestId("request-confirm-button").click()})})(this.page);deleteAccount=R;deleteNetwork=(t=>async e=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("settings-networks-menu-cell-pressable").click(),await t.getByTestId("network-list-search").fill(e),await(await t.waitForSelector('//div[@data-testid="list-"][1]//button')).click(),await t.getByTestId("custom-network-delete").click(),await j(t)})(this.page);getTokenBalance=(t=>async e=>{const a=[async()=>(await t.bringToFront(),await t.getByTestId("portfolio-selector-nav-tabLabel--crypto").click(),await t.waitForSelector(`//button[contains(@data-testid, "asset-item")][contains(@data-testid, "${e}")]`,{timeout:500})),async()=>(await t.getByTestId("portfolio-selector-nav-tabLabel--testnet").click(),await t.waitForSelector(`//button[contains(@data-testid, "asset-item")][contains(@data-testid, "${e}")]`,{timeout:500}))];let i;for(const t of a)try{i=await t()}catch{}if(!i)return 0;const o=(await i.textContent()).replaceAll(/ |,/g,"").split(e)[2];return o?Number(o):0})(this.page);hasNetwork=(t=>async e=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("settings-networks-menu-cell-pressable").click(),await t.getByTestId("network-list-search").fill(e);const a=await t.isVisible('//div[@data-testid="list-"][1]//button');return await j(t),a})(this.page);importPK=z;lock=(t=>async()=>{await t.getByTestId("settings-navigation-link").click(),await t.getByTestId("lock-wallet-button").click()})(this.page);sign=(t=>async()=>{await N(t,async t=>{await t.getByTestId("sign-message").click()})})(this.page);switchAccount=(t=>async e=>{await t.getByTestId("portfolio-header--switcher-cell-pressable").click(),await(await t.waitForSelector(`(//button[@data-testid="wallet-switcher--wallet-item-cell-pressable"])[${e}]`)).click()})(this.page);switchNetwork=J;unlock=(t=>async(e="password1234!!!!")=>{await t.getByTestId("unlock-with-password").fill(e),await t.getByTestId("unlock-wallet-button").click(),await j(t),await t.waitForSelector("//div[@data-testid='asset-list']//*[not(text='')]",{timeout:1e4})})(this.page)}class O extends y{static id="metamask";static recommendedVersion="10.25.0";static releasesUrl="https://api.github.com/repos/metamask/metamask-extension/releases";static homePath="/home.html";options;static download=d(this.id,this.releasesUrl,this.recommendedVersion);defaultSetupSteps=[_,P,U,E,A];setup=c(this.page,this.defaultSetupSteps);addNetwork=(t=>async({networkName:e,rpc:a,chainId:i,symbol:o})=>{await t.bringToFront(),await v(t),await f(t,"Add network"),await t.getByTestId("network-display").click(),await t.getByRole("button",{name:"Add network"}).click(),await t.getByTestId("add-network-manually").click(),await t.getByLabel("Network name").fill(e),await t.getByLabel("New RPC URL").fill(a),await t.getByLabel("Chain ID").fill(String(i)),await t.getByLabel("Currency symbol").fill(o);const n=await $(t);if(n)throw await F(t),new SyntaxError(n);await f(t,"Save"),await t.waitForSelector(`//*[text() = '${e}']`),await t.isVisible("//button[contains(text(), 'Got it')]")&&await f(t,"Got it")})(this.page);addToken=(t=>async({tokenAddress:e,symbol:a,decimals:i=0})=>{await t.bringToFront(),await k(t,"Import tokens"),await t.waitForTimeout(500),await f(t,"Custom token"),await b(t,"Token contract address",e),a&&await b(t,"Token symbol",a,!0);const o=await S(t,"Token decimal");await o.isDisabled()||await o.type(String(i)),await f(t,"Add custom token"),await f(t,"Import tokens")})(this.page);approve=(t=>async()=>{await N(t,async e=>{await e.waitForLoadState(),await e.bringToFront(),await e.locator('input[type="checkbox"]').first().check(),await f(e,"Next"),await f(e,"Connect"),await h(t),await e.close()})})(this.page);createAccount=(t=>async()=>{await t.bringToFront(),await I(t),await k(t,"Create account"),await f(t,"Create"),await h(t)})(this.page);confirmNetworkSwitch=(t=>async()=>{await N(t,async e=>{await f(e,"Switch network"),await h(t)})})(this.page);confirmTransaction=(t=>async e=>{await N(t,async t=>{e&&(await t.getByTestId("edit-gas-fee-button").click(),await t.getByTestId("edit-gas-fee-item-custom").click(),e.gas&&await t.getByTestId("base-fee-input").fill(String(e.gas)),e.priority&&await t.getByTestId("priority-fee-input").fill(String(e.priority)),e.gasLimit&&(await t.getByTestId("advanced-gas-fee-edit").click(),await t.getByTestId("gas-limit-input").fill(String(e.gasLimit))),await t.getByRole("button",{name:"Save"}).click()),await t.getByTestId("page-container-footer-next").click()})})(this.page);deleteAccount=(t=>async e=>{if(await t.bringToFront(),1===e)throw new SyntaxError("Account 1 cannot be deleted");await C(t)(e),await(async t=>{const e=await(t=>t.waitForSelector("button.menu-bar__account-options"))(t);await e.click(),await t.waitForSelector(".menu__container.account-options-menu")})(t),await k(t,"Remove account"),await f(t,"Remove"),await h(t)})(this.page);deleteNetwork=(t=>async e=>{await t.bringToFront(),await v(t);const a=await T(t,e);await a.hover();const i=await t.waitForSelector(`//*[contains(text(), '${e}')]/following-sibling::i`);await i.click(),await f(t,"Delete"),await F(t)})(this.page);getTokenBalance=(t=>async e=>{await t.bringToFront(),await t.waitForTimeout(1e3);const a=await t.$$(".asset-list-item__token-button");for(let i=0;i<a.length;i++){const o=a[i],n=await t.evaluate(t=>t.getAttribute("title"),o);if(n.split(" ")[1].toUpperCase()===e.toUpperCase()){const t=n.split(" ")[0];return parseFloat(t)}}return 0})(this.page);hasNetwork=(t=>async e=>{await t.bringToFront(),await v(t);const a=await t.isVisible(`//div[@class="network-dropdown-list"]/li[contains(string(), "${e}")]`);return(await t.waitForSelector(".network-display")).click(),a})(this.page);importPK=(t=>async e=>{await t.bringToFront(),await I(t),await k(t,"Import account"),await b(t,"your private key",e),await f(t,"Import");const a=await $(t);if(a)throw new SyntaxError(a)})(this.page);lock=(t=>async()=>{await t.bringToFront(),await I(t),await f(t,"Lock")})(this.page);sign=(t=>async()=>{await N(t,async t=>{await t.bringToFront(),await t.reload(),await t.waitForSelector("div");let e=await t.locator(".signature-request-message__scroll-button");await e.count(),await e.count()>=1&&await t.click(".signature-request-message__scroll-button"),await f(t,"Sign")})})(this.page);switchAccount=C(this.page);switchNetwork=(t=>async(e="main")=>{await t.bringToFront(),await v(t),await t.waitForSelector(":nth-match(li.dropdown-menu-item, 2)");const a=await t.evaluate(t=>{const e=document.querySelectorAll("li.dropdown-menu-item");for(let a=0;a<e.length;a++)if(e[a].innerText.toLowerCase().includes(t.toLowerCase()))return a;return 0},e),i=await t.evaluate(t=>document.querySelectorAll("li.dropdown-menu-item > span")[t].innerText,a),o=(await t.$$("li.dropdown-menu-item"))[a];await o.click(),await t.waitForSelector(`//*[text() = '${i}']`)})(this.page);unlock=(t=>async(e="password1234")=>{await t.bringToFront(),await t.getByTestId("unlock-password").fill(e),await t.getByTestId("unlock-submit").click(),await E(t)})(this.page)}const Q=[q,O],W=t=>{const e=Q.find(e=>e.id===t);if(!e)throw new Error(`Wallet ${t} not supported`);return e},D=async(t,e)=>{const a=W(t);if(1===e.pages().length){let t;try{return t=await e.waitForEvent("page",{timeout:2e3}),new a(t)}catch{t=await e.newPage(),await t.goto(`chrome-extension://gadekpdjmpjjnnemgnhkbjgnjpdaakgh${a.homePath}`)}return new a(t)}return new a(e.pages()[1])},Z=a.resolve(o.tmpdir(),"dappwright","session");async function X(t,e){const{headless:i,...o}=e,s=W(o.wallet);if(!s)throw new Error("Wallet not supported");const r=await s.download(o),c=await n.chromium.launchPersistentContext(a.join(Z,o.wallet),{headless:i??!1,args:[`--disable-extensions-except=${r}`,`--load-extension=${r}`]});return{wallet:await D(s.id,c),browserContext:c}}const H=async(t,{seed:i,password:o,showTestNets:n,...s})=>{e.existsSync(a.join(Z,s.wallet))&&e.rmdirSync(a.join(Z,s.wallet),{recursive:!0});const{browserContext:r}=await X(0,s);try{const t=await D(s.wallet,r);return await t.setup({seed:i,password:o,showTestNets:n}),[t,t.page,r]}catch(t){throw await r.close(),t}};export{q as CoinbaseWallet,O as MetaMaskWallet,H as bootstrap,D as getWallet,X as launch,Z as sessionPath,c as setup};
//# sourceMappingURL=index.mjs.map
